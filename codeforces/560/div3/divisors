#include <bits/stdc++.h>
// #include <boost/math/common_factor.hpp>

using namespace std;

int gcd(int a, int b) 
{ 
	if (b == 0) 
		return a; 
	return gcd(b, a % b); 
} 

long long int lcm(int a, int b)  
 {  
    return (a*b)/gcd(a, b);  
 }  

long long int findlcm(vector<long long int> d, int n) 
{ 
	// Initialize result 
	long long int  ans = d[0];  
	for (int i = 1; i < n; i++) 
		ans = (((d[i] * ans)) / (gcd(d[i], ans))); 
	return ans; 
}

int main() {
      long long int q,n,num,num1,i;
      string sp;
      long long int  ans;
      vector<long long int> d;
      cin>>q;
      while(q)
        {
          cin>>n;
          if(n==1)
           {
             cin>>num;
             ans=num*num;
             sp=to_string(ans);
             cout<<sp<<endl;
           }
          else if(n==2)
           {
             cin>>num;
             cin>>num1;
             ans=lcm(num,num1);
               if(num==ans || num1==ans)
                {
                  ans=num*num1;
                  cout<<ans<<endl;
                }
               else
                 cout<<ans<<endl;  
          } 
         else
         {  
          for(i=0;i<n;i++)
            {
              cin>>num;
              d.push_back(num);
            }
          ans=findlcm(d,d.size()) ; 
          cout<<ans<<endl;  
         }
        q--; 
        }
}